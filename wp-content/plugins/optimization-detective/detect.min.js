const win=window,doc=win.document,consoleLogPrefix="[Optimization Detective]",storageLockTimeSessionKey="odStorageLockTime";function isStorageLocked(e,t){if(0===t)return!1;try{const o=parseInt(sessionStorage.getItem("odStorageLockTime"));return!isNaN(o)&&e<o+1e3*t}catch(e){return!1}}function setStorageLock(e){try{sessionStorage.setItem("odStorageLockTime",String(e))}catch(e){}}function log(...e){console.log(consoleLogPrefix,...e)}function warn(...e){console.warn(consoleLogPrefix,...e)}function error(...e){console.error(consoleLogPrefix,...e)}function getGroupForViewportWidth(e,t){for(const o of t)if(e>o.minimumViewportWidth&&(null===o.maximumViewportWidth||e<=o.maximumViewportWidth))return o;throw new Error(`${consoleLogPrefix} Unexpectedly unable to locate group for the current viewport width.`)}async function getAlreadySubmittedSessionStorageKey(e,t,o){const n=[e,t,o.minimumViewportWidth,o.maximumViewportWidth||""].join("-"),r=(new TextEncoder).encode(n),i=await crypto.subtle.digest("SHA-1",r);return`odSubmitted-${Array.from(new Uint8Array(i)).map((e=>e.toString(16).padStart(2,"0"))).join("")}`}function getCurrentTime(){return Date.now()}function recursiveFreeze(e){for(const t of Object.getOwnPropertyNames(e)){const o=e[t];null!==o&&"object"==typeof o&&recursiveFreeze(o)}Object.freeze(e)}let urlMetric;const reservedRootPropertyKeys=new Set(["url","viewport","elements"]);function getRootData(){const e=structuredClone(urlMetric);return recursiveFreeze(e),e}function extendRootData(e){for(const t of Object.getOwnPropertyNames(e))if(reservedRootPropertyKeys.has(t))throw new Error(`Disallowed setting of key '${t}' on root.`);Object.assign(urlMetric,e)}const elementsByXPath=new Map,reservedElementPropertyKeys=new Set(["isLCP","isLCPCandidate","xpath","intersectionRatio","intersectionRect","boundingClientRect"]);function getElementData(e){const t=elementsByXPath.get(e);if(t){const e=structuredClone(t);return recursiveFreeze(e),e}return null}function extendElementData(e,t){if(!elementsByXPath.has(e))throw new Error(`Unknown element with XPath: ${e}`);for(const e of Object.getOwnPropertyNames(t))if(reservedElementPropertyKeys.has(e))throw new Error(`Disallowed setting of key '${e}' on element.`);const o=elementsByXPath.get(e);Object.assign(o,t)}export default async function detect({minViewportAspectRatio:e,maxViewportAspectRatio:t,isDebug:o,extensionModuleUrls:n,restApiEndpoint:r,restApiNonce:i,currentETag:s,currentUrl:a,urlMetricSlug:c,cachePurgePostId:l,urlMetricHMAC:d,urlMetricGroupStatuses:u,storageLockTTL:g,freshnessTTL:f,webVitalsLibrarySrc:m,urlMetricGroupCollection:w}){if(o){const e=[];for(const t of w.groups)for(const o of t.url_metrics)o.creationDate=new Date(1e3*o.timestamp),e.push(o);log("Stored URL Metric Group Collection:",w),e.sort(((e,t)=>t.timestamp-e.timestamp)),log("Stored URL Metrics in reverse chronological order:",e)}if(0===win.innerWidth||0===win.innerHeight)return void(o&&log("Window must have non-zero dimensions for URL Metric collection."));const p=getGroupForViewportWidth(win.innerWidth,u);if(p.complete)return void(o&&log("No need for URL Metrics from the current viewport."));const h=await getAlreadySubmittedSessionStorageKey(s,a,p);if(h in sessionStorage){const e=parseInt(sessionStorage.getItem(h),10);if(!isNaN(e)&&(getCurrentTime()-e)/1e3<f&&o)return void log("The current client session already submitted a fresh URL Metric for this URL so a new one will not be collected now.")}const y=win.innerWidth/win.innerHeight;if(y<e||y>t)return void(o&&warn(`Viewport aspect ratio (${y}) is not in the accepted range of ${e} to ${t}.`));if(await new Promise((e=>{"loading"!==doc.readyState?e():doc.addEventListener("DOMContentLoaded",e,{once:!0})})),await new Promise((e=>{"complete"===doc.readyState?e():win.addEventListener("load",e,{once:!0})})),"function"==typeof requestIdleCallback&&await new Promise((e=>{requestIdleCallback(e)})),isStorageLocked(getCurrentTime(),g))return void(o&&warn("Aborted detection due to storage being locked."));let L=!1;window.addEventListener("resize",(()=>{L=!0}),{once:!0});const{onTTFB:P,onFCP:S,onLCP:b,onINP:v,onCLS:M}=await import(m);if(doc.documentElement.scrollTop>0)return void(o&&warn("Aborted detection since initial scroll position of page is not at the top."));o&&log("Proceeding with detection");const C=new Map,R=[],x=[];for(const e of n)try{const t=await import(e);if(C.set(e,t),t.initialize instanceof Function){const n=t.initialize({isDebug:o,onTTFB:P,onFCP:S,onLCP:b,onINP:v,onCLS:M});n instanceof Promise&&(R.push(n),x.push(e))}}catch(t){error(`Failed to start initializing extension '${e}':`,t)}const E=await Promise.allSettled(R);for(const[e,t]of E.entries())"rejected"===t.status&&error(`Failed to initialize extension '${x[e]}':`,t.reason);const D=doc.body.querySelectorAll("[data-od-xpath]"),T=new Map([...D].map((e=>[e,e.dataset.odXpath]))),z=[];let U;function k(){U instanceof IntersectionObserver&&(U.disconnect(),win.removeEventListener("scroll",k))}T.size>0&&(await new Promise((e=>{U=new IntersectionObserver((t=>{for(const e of t)z.push(e);e()}),{root:null,threshold:0});for(const e of T.keys())U.observe(e)})),win.addEventListener("scroll",k,{once:!0,passive:!0}));const $=[];await new Promise((e=>{b((t=>{$.push(t),e()}),{reportAllChanges:!0})})),k(),o&&log("Detection is stopping."),urlMetric={url:a,viewport:{width:win.innerWidth,height:win.innerHeight},elements:[]};const A=$.at(-1);for(const e of z){const t=T.get(e.target);if(!t){o&&error("Unable to look up XPath for element");continue}const n=A?.entries[0]?.element,r={isLCP:e.target===n,isLCPCandidate:!!$.find((t=>{const o=t.entries[0]?.element;return o===e.target})),xpath:t,intersectionRatio:e.intersectionRatio,intersectionRect:e.intersectionRect,boundingClientRect:e.boundingClientRect};urlMetric.elements.push(r),elementsByXPath.set(r.xpath,r)}if(o&&log("Current URL Metric:",urlMetric),await new Promise((e=>{win.addEventListener("pagehide",e,{once:!0}),win.addEventListener("pageswap",e,{once:!0}),doc.addEventListener("visibilitychange",(()=>{"hidden"===document.visibilityState&&e()}),{once:!0})})),L)return void(o&&log("Aborting URL Metric collection due to viewport size change."));if(C.size>0){const e=[],t=[];for(const[n,r]of C.entries())if(r.finalize instanceof Function)try{const i=r.finalize({isDebug:o,getRootData,getElementData,extendElementData,extendRootData});i instanceof Promise&&(e.push(i),t.push(n))}catch(e){error(`Unable to start finalizing extension '${n}':`,e)}const n=await Promise.allSettled(e);for(const[e,o]of n.entries())"rejected"===o.status&&error(`Failed to finalize extension '${t[e]}':`,o.reason)}const F=JSON.stringify(urlMetric),O=F.length/64e3*100;if(F.length>65536)return void(o&&error(`Unable to send URL Metric because it is ${F.length.toLocaleString()} bytes, ${Math.round(O)}% of 64 KiB limit:`,urlMetric));if(setStorageLock(getCurrentTime()),sessionStorage.setItem(h,String(getCurrentTime())),o){const e=`Sending URL Metric (${F.length.toLocaleString()} bytes, ${Math.round(O)}% of 64 KiB limit):`;O<50?log(e,urlMetric):warn(e,urlMetric)}const I=new URL(r);"string"==typeof i&&I.searchParams.set("_wpnonce",i),I.searchParams.set("slug",c),I.searchParams.set("current_etag",s),"number"==typeof l&&I.searchParams.set("cache_purge_post_id",l.toString()),I.searchParams.set("hmac",d),navigator.sendBeacon(I,new Blob([F],{type:"application/json"})),T.clear()}